// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArcadeButton Snapshot 0 should match 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArcadeButton
    color="hsla(120, 52%, 48%, 1)"
    onPressIn={[Function]}
    onPressOut={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={85}
        >
          <View
            style={
              Array [
                90,
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                87,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                89,
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                86,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                88,
              ]
            }
          />
        </View>,
        <View
          style={80}
        >
          <View
            style={
              Array [
                82,
                undefined,
              ]
            }
          />
          <AnimatedComponent
            style={
              Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "zIndex": 1,
              }
            }
          >
            <View
              style={
                Array [
                  83,
                  undefined,
                ]
              }
            />
            <Touchable
              activeValue={1}
              delayLongPress={500}
              delayPressIn={0}
              delayPressOut={100}
              onPressIn={[Function]}
              onPressOut={[Function]}
              press={0}
              pressDuration={150}
              pressRetentionOffset={
                Object {
                  "bottom": 30,
                  "left": 20,
                  "right": 20,
                  "top": 20,
                }
              }
            >
              <View
                style={
                  Array [
                    81,
                    Object {
                      "backgroundColor": "hsla(120, 52%, 48%, 1)",
                      "borderColor": "hsla(120, 52%, 48%, 1)",
                    },
                    undefined,
                  ]
                }
              />
            </Touchable>
          </AnimatedComponent>
        </View>,
      ],
      "style": 79,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View
              style={
                Array [
                  90,
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  87,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  89,
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  86,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  88,
                ]
              }
            />,
          ],
          "style": 85,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                90,
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                87,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                89,
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                86,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                88,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View
              style={
                Array [
                  82,
                  undefined,
                ]
              }
            />,
            <AnimatedComponent
              style={
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "zIndex": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    83,
                    undefined,
                  ]
                }
              />
              <Touchable
                activeValue={1}
                delayLongPress={500}
                delayPressIn={0}
                delayPressOut={100}
                onPressIn={[Function]}
                onPressOut={[Function]}
                press={0}
                pressDuration={150}
                pressRetentionOffset={
                  Object {
                    "bottom": 30,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      81,
                      Object {
                        "backgroundColor": "hsla(120, 52%, 48%, 1)",
                        "borderColor": "hsla(120, 52%, 48%, 1)",
                      },
                      undefined,
                    ]
                  }
                />
              </Touchable>
            </AnimatedComponent>,
          ],
          "style": 80,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                82,
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <View
                  style={
                    Array [
                      83,
                      undefined,
                    ]
                  }
                />,
                <Touchable
                  activeValue={1}
                  delayLongPress={500}
                  delayPressIn={0}
                  delayPressOut={100}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  press={0}
                  pressDuration={150}
                  pressRetentionOffset={
                    Object {
                      "bottom": 30,
                      "left": 20,
                      "right": 20,
                      "top": 20,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ]
                    }
                  />
                </Touchable>,
              ],
              "style": Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "zIndex": 1,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "style": Array [
                    83,
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeValue": 1,
                  "children": <View
                    style={
                      Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ]
                    }
                  />,
                  "delayLongPress": 500,
                  "delayPressIn": 0,
                  "delayPressOut": 100,
                  "onPressIn": [Function],
                  "onPressOut": [Function],
                  "press": 0,
                  "pressDuration": 150,
                  "pressRetentionOffset": Object {
                    "bottom": 30,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": undefined,
                    "style": Array [
                      81,
                      Object {
                        "backgroundColor": "hsla(120, 52%, 48%, 1)",
                        "borderColor": "hsla(120, 52%, 48%, 1)",
                      },
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={85}
          >
            <View
              style={
                Array [
                  90,
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  87,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  89,
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  86,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  88,
                ]
              }
            />
          </View>,
          <View
            style={80}
          >
            <View
              style={
                Array [
                  82,
                  undefined,
                ]
              }
            />
            <AnimatedComponent
              style={
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "zIndex": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    83,
                    undefined,
                  ]
                }
              />
              <Touchable
                activeValue={1}
                delayLongPress={500}
                delayPressIn={0}
                delayPressOut={100}
                onPressIn={[Function]}
                onPressOut={[Function]}
                press={0}
                pressDuration={150}
                pressRetentionOffset={
                  Object {
                    "bottom": 30,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      81,
                      Object {
                        "backgroundColor": "hsla(120, 52%, 48%, 1)",
                        "borderColor": "hsla(120, 52%, 48%, 1)",
                      },
                      undefined,
                    ]
                  }
                />
              </Touchable>
            </AnimatedComponent>
          </View>,
        ],
        "style": 79,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View
                style={
                  Array [
                    90,
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    87,
                    Object {
                      "backgroundColor": "hsla(120, 52%, 48%, 1)",
                    },
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    89,
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    86,
                    Object {
                      "backgroundColor": "hsla(120, 52%, 48%, 1)",
                    },
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    88,
                  ]
                }
              />,
            ],
            "style": 85,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  90,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  87,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  89,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  86,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  88,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View
                style={
                  Array [
                    82,
                    undefined,
                  ]
                }
              />,
              <AnimatedComponent
                style={
                  Object {
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                    "zIndex": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      83,
                      undefined,
                    ]
                  }
                />
                <Touchable
                  activeValue={1}
                  delayLongPress={500}
                  delayPressIn={0}
                  delayPressOut={100}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  press={0}
                  pressDuration={150}
                  pressRetentionOffset={
                    Object {
                      "bottom": 30,
                      "left": 20,
                      "right": 20,
                      "top": 20,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ]
                    }
                  />
                </Touchable>
              </AnimatedComponent>,
            ],
            "style": 80,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  82,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <View
                    style={
                      Array [
                        83,
                        undefined,
                      ]
                    }
                  />,
                  <Touchable
                    activeValue={1}
                    delayLongPress={500}
                    delayPressIn={0}
                    delayPressOut={100}
                    onPressIn={[Function]}
                    onPressOut={[Function]}
                    press={0}
                    pressDuration={150}
                    pressRetentionOffset={
                      Object {
                        "bottom": 30,
                        "left": 20,
                        "right": 20,
                        "top": 20,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          81,
                          Object {
                            "backgroundColor": "hsla(120, 52%, 48%, 1)",
                            "borderColor": "hsla(120, 52%, 48%, 1)",
                          },
                          undefined,
                        ]
                      }
                    />
                  </Touchable>,
                ],
                "style": Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "zIndex": 1,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "style": Array [
                      83,
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeValue": 1,
                    "children": <View
                      style={
                        Array [
                          81,
                          Object {
                            "backgroundColor": "hsla(120, 52%, 48%, 1)",
                            "borderColor": "hsla(120, 52%, 48%, 1)",
                          },
                          undefined,
                        ]
                      }
                    />,
                    "delayLongPress": 500,
                    "delayPressIn": 0,
                    "delayPressOut": 100,
                    "onPressIn": [Function],
                    "onPressOut": [Function],
                    "press": 0,
                    "pressDuration": 150,
                    "pressRetentionOffset": Object {
                      "bottom": 30,
                      "left": 20,
                      "right": 20,
                      "top": 20,
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": undefined,
                      "style": Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ArcadeButton Snapshot 1 should match 1`] = `undefined`;

exports[`ArcadeButton Snapshot 2 should match 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArcadeButton
    color="hsla(120, 52%, 48%, 1)"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={85}
        >
          <View
            style={
              Array [
                90,
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                87,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                89,
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                86,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                88,
              ]
            }
          />
        </View>,
        <View
          style={80}
        >
          <View
            style={
              Array [
                82,
                undefined,
              ]
            }
          />
          <AnimatedComponent
            style={
              Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "zIndex": 1,
              }
            }
          >
            <View
              style={
                Array [
                  83,
                  undefined,
                ]
              }
            />
            <Touchable
              activeValue={1}
              delayLongPress={500}
              delayPressIn={0}
              delayPressOut={100}
              onPressIn={[Function]}
              onPressOut={[Function]}
              press={0}
              pressDuration={150}
              pressRetentionOffset={
                Object {
                  "bottom": 30,
                  "left": 20,
                  "right": 20,
                  "top": 20,
                }
              }
            >
              <View
                style={
                  Array [
                    81,
                    Object {
                      "backgroundColor": "hsla(120, 52%, 48%, 1)",
                      "borderColor": "hsla(120, 52%, 48%, 1)",
                    },
                    undefined,
                  ]
                }
              />
            </Touchable>
          </AnimatedComponent>
        </View>,
      ],
      "style": 79,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View
              style={
                Array [
                  90,
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  87,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  89,
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  86,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />,
            <View
              style={
                Array [
                  88,
                ]
              }
            />,
          ],
          "style": 85,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                90,
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                87,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                89,
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                86,
                Object {
                  "backgroundColor": "hsla(120, 52%, 48%, 1)",
                },
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                88,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View
              style={
                Array [
                  82,
                  undefined,
                ]
              }
            />,
            <AnimatedComponent
              style={
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "zIndex": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    83,
                    undefined,
                  ]
                }
              />
              <Touchable
                activeValue={1}
                delayLongPress={500}
                delayPressIn={0}
                delayPressOut={100}
                onPressIn={[Function]}
                onPressOut={[Function]}
                press={0}
                pressDuration={150}
                pressRetentionOffset={
                  Object {
                    "bottom": 30,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      81,
                      Object {
                        "backgroundColor": "hsla(120, 52%, 48%, 1)",
                        "borderColor": "hsla(120, 52%, 48%, 1)",
                      },
                      undefined,
                    ]
                  }
                />
              </Touchable>
            </AnimatedComponent>,
          ],
          "style": 80,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Array [
                82,
                undefined,
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <View
                  style={
                    Array [
                      83,
                      undefined,
                    ]
                  }
                />,
                <Touchable
                  activeValue={1}
                  delayLongPress={500}
                  delayPressIn={0}
                  delayPressOut={100}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  press={0}
                  pressDuration={150}
                  pressRetentionOffset={
                    Object {
                      "bottom": 30,
                      "left": 20,
                      "right": 20,
                      "top": 20,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ]
                    }
                  />
                </Touchable>,
              ],
              "style": Object {
                "opacity": 1,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "zIndex": 1,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "style": Array [
                    83,
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeValue": 1,
                  "children": <View
                    style={
                      Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ]
                    }
                  />,
                  "delayLongPress": 500,
                  "delayPressIn": 0,
                  "delayPressOut": 100,
                  "onPressIn": [Function],
                  "onPressOut": [Function],
                  "press": 0,
                  "pressDuration": 150,
                  "pressRetentionOffset": Object {
                    "bottom": 30,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": undefined,
                    "style": Array [
                      81,
                      Object {
                        "backgroundColor": "hsla(120, 52%, 48%, 1)",
                        "borderColor": "hsla(120, 52%, 48%, 1)",
                      },
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={85}
          >
            <View
              style={
                Array [
                  90,
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  87,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  89,
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  86,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  88,
                ]
              }
            />
          </View>,
          <View
            style={80}
          >
            <View
              style={
                Array [
                  82,
                  undefined,
                ]
              }
            />
            <AnimatedComponent
              style={
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "zIndex": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    83,
                    undefined,
                  ]
                }
              />
              <Touchable
                activeValue={1}
                delayLongPress={500}
                delayPressIn={0}
                delayPressOut={100}
                onPressIn={[Function]}
                onPressOut={[Function]}
                press={0}
                pressDuration={150}
                pressRetentionOffset={
                  Object {
                    "bottom": 30,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
              >
                <View
                  style={
                    Array [
                      81,
                      Object {
                        "backgroundColor": "hsla(120, 52%, 48%, 1)",
                        "borderColor": "hsla(120, 52%, 48%, 1)",
                      },
                      undefined,
                    ]
                  }
                />
              </Touchable>
            </AnimatedComponent>
          </View>,
        ],
        "style": 79,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View
                style={
                  Array [
                    90,
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    87,
                    Object {
                      "backgroundColor": "hsla(120, 52%, 48%, 1)",
                    },
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    89,
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    86,
                    Object {
                      "backgroundColor": "hsla(120, 52%, 48%, 1)",
                    },
                    undefined,
                  ]
                }
              />,
              <View
                style={
                  Array [
                    88,
                  ]
                }
              />,
            ],
            "style": 85,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  90,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  87,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  89,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  86,
                  Object {
                    "backgroundColor": "hsla(120, 52%, 48%, 1)",
                  },
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  88,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View
                style={
                  Array [
                    82,
                    undefined,
                  ]
                }
              />,
              <AnimatedComponent
                style={
                  Object {
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                    "zIndex": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      83,
                      undefined,
                    ]
                  }
                />
                <Touchable
                  activeValue={1}
                  delayLongPress={500}
                  delayPressIn={0}
                  delayPressOut={100}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  press={0}
                  pressDuration={150}
                  pressRetentionOffset={
                    Object {
                      "bottom": 30,
                      "left": 20,
                      "right": 20,
                      "top": 20,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ]
                    }
                  />
                </Touchable>
              </AnimatedComponent>,
            ],
            "style": 80,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Array [
                  82,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <View
                    style={
                      Array [
                        83,
                        undefined,
                      ]
                    }
                  />,
                  <Touchable
                    activeValue={1}
                    delayLongPress={500}
                    delayPressIn={0}
                    delayPressOut={100}
                    onPressIn={[Function]}
                    onPressOut={[Function]}
                    press={0}
                    pressDuration={150}
                    pressRetentionOffset={
                      Object {
                        "bottom": 30,
                        "left": 20,
                        "right": 20,
                        "top": 20,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          81,
                          Object {
                            "backgroundColor": "hsla(120, 52%, 48%, 1)",
                            "borderColor": "hsla(120, 52%, 48%, 1)",
                          },
                          undefined,
                        ]
                      }
                    />
                  </Touchable>,
                ],
                "style": Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "zIndex": 1,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "style": Array [
                      83,
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeValue": 1,
                    "children": <View
                      style={
                        Array [
                          81,
                          Object {
                            "backgroundColor": "hsla(120, 52%, 48%, 1)",
                            "borderColor": "hsla(120, 52%, 48%, 1)",
                          },
                          undefined,
                        ]
                      }
                    />,
                    "delayLongPress": 500,
                    "delayPressIn": 0,
                    "delayPressOut": 100,
                    "onPressIn": [Function],
                    "onPressOut": [Function],
                    "press": 0,
                    "pressDuration": 150,
                    "pressRetentionOffset": Object {
                      "bottom": 30,
                      "left": 20,
                      "right": 20,
                      "top": 20,
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": undefined,
                      "style": Array [
                        81,
                        Object {
                          "backgroundColor": "hsla(120, 52%, 48%, 1)",
                          "borderColor": "hsla(120, 52%, 48%, 1)",
                        },
                        undefined,
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ArcadeButton Snapshot 3 should match 1`] = `undefined`;
